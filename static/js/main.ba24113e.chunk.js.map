{"version":3,"sources":["api.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["url","process","includes","defaultData","career","value","label","options","course","work","semester","year","gender","radio","names","useStyles","makeStyles","theme","html","backgroundColor","palette","background","default","root","marginTop","spacing","form","paddingTop","paddingBottom","itemContainer","width","semesterInput","display","yearInput","TextFieldView","otherprops","TextField","variant","fullWidth","RadiosView","data","field","handleRadioChange","FormControl","component","key","FormLabel","RadioGroup","row","aria-label","onChange","Object","keys","map","FormControlLabel","name","style","marginRight","control","Radio","color","App","classes","useState","setUrl","setData","generateCover","console","log","method","body","JSON","stringify","headers","fetch","then","res","json","link","fetchGenerateCover","reduce","prev","convertToDataApi","pdfUrl","handleDataChange","addName","Container","maxWidth","className","Paper","Grid","container","direction","alignItems","noValidate","autoComplete","item","Typography","Autocomplete","event","renderInput","params","target","height","idx","Fragment","sm","index","newValues","changeNameFromData","textAlign","length","IconButton","onClick","fontSize","indexToRemove","filter","x","Button","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","createMuiTheme","common","blue","orange","primary","main","secondary","typography","tab","fontFamily","textTransform","fontWeight","estimate","h2","lineHeight","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","URL","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ba24113e.chunk.js","sourcesContent":["const url = process.env.NODE_ENV.includes('development') ? 'http://localhost:4000/' : 'https://caratulas-ucsp-api.herokuapp.com/';\n\nexport const fetchGenerateCover = (data) => {\n  console.log(data);\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  };\n\n  return fetch(url, options)\n    .then(res=> res.json())\n    .then(res => res.link)\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchGenerateCover } from \"./api\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst debug = false;\n\nconst defaultData = {\n  career: {\n    value: debug ? \"Ciencia de la Computación\" : \"Ciencia de la Computación\",\n    label: \"Carrera\",\n    options: [\n      \"Ciencia de la Computación\",\n      \"Administración de Empresas\",\n      \"Arquitectura y Urbanismo\",\n      \"Contabilidad\",\n      \"Derecho\",\n      \"Educación inicial y primaria\",\n      \"Ingenieria Mecatronica\",\n      \"Ingenieria Civil\",\n      \"Ingenieria Electronica y Telecomunicaciones\",\n      \"Ingenieria Industrial\",\n      \"Psicologia\",\n      \"Sin carrera\",\n      \"\"\n    ]\n  },\n  course: {\n    value: debug ? \"Microprocessors\" : \"\",\n    label: \"Curso\"\n  },\n  work: {\n    value: debug ? \"Real final job\" : \"\",\n    label: \"Nombre del trabajo\"\n  },\n  semester: {\n    value: debug ? \"VIII Semester\" : \"\",\n    label: \"Semestre\",\n    options: [\"Semestre I\", \"Semestre II\", \"Semestre II\", \"Semestre IV\", \"Semestre V\"\n    , \"Semestre VI\", \"Semestre VII\", \"Semestre VIII\", \"Semestre IX\", \"Semestre X\"\n    , \"Semestre XI\", \"Semestre XII\", \"\"]\n  },\n  year: {\n    value: debug ? \"2020-1\" : \"2020-1\",\n    label: \"Año\"\n  },\n  gender: {\n    value: debug ? \"M\" : \"M\",\n    radio: { \"M\": \"Masculino\", \"F\": \"Femenino\" },\n    label: \"Género\"\n  },\n  names: {\n    value: debug ? [\"Oscar Daniel Ramos Ramirez\"] : [\"\"],\n    label: \"Integrantes\"\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    html: {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  root: {\n    marginTop: theme.spacing(8)\n  },\n  form: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  itemContainer: {\n    width: \"80%\"\n  },\n  semesterInput: {\n    width: \"60%\",\n    display: \"inline\"\n  },\n  yearInput: {\n    width: \"40%\",\n    display: \"inline\"\n  }\n}));\n\nconst TextFieldView = ({ ...otherprops }) =>\n  <TextField\n    variant='outlined'\n    fullWidth\n    {...otherprops}\n  />;\n\nconst RadiosView = ({ data, field, handleRadioChange }) => (\n  <FormControl component='fieldset' key={field}>\n    <FormLabel component='legend'>{data[field].label}</FormLabel>\n    <RadioGroup row aria-label={data[field].label} value={data[field].value} onChange={handleRadioChange}>\n      {\n        Object.keys(data[field].radio).map(key => (\n          <FormControlLabel\n            key={key}\n            name={field}\n            value={key}\n            style={{marginRight: \"1.25em\"}}\n            control={<Radio color='primary' />}\n            label={data[field].radio[key]}\n          />\n        ))\n      }\n    </RadioGroup>\n  </FormControl>\n)\n\nfunction App() {\n  const classes = useStyles();\n  const [url, setUrl] = useState(\"Aquí aparecerá un link\");\n  const [data, setData] = useState(defaultData);\n\n  const generateCover = () => {\n    const convertToDataApi = data =>\n      Object.keys(data).reduce((prev, key) => {\n        prev[key] = data[key].value;\n        return prev;\n      }, {});\n\n    fetchGenerateCover(convertToDataApi(data)).then(pdfUrl => {\n      setUrl(pdfUrl);\n    });\n  };\n\n  const handleDataChange = (field, value) => {\n    setData({ ...data, [field]: { ...data[field], value } });\n  };\n\n  const handleNamesInput = index => event => {\n    const changeNameFromData = (value) => {\n      const newValues = [...value];\n      newValues[index] = event.target.value;\n      return newValues;\n    }\n\n    setData({ ...data, names: { ...data.names, value: changeNameFromData(data.names.value) } });\n  }\n\n  const addName = () => {\n    setData({...data, names: {...data.names, value: [...data.names.value, \"\"]}})\n  }\n\n  const removeName = indexToRemove => () => {\n    const removeNameFromData = value => value.filter((x, idx) => idx !== indexToRemove)\n\n    setData({...data, names: {...data.names, value: removeNameFromData(data.names.value) } })\n  }\n\n\n  return (\n    <Container maxWidth='xs' className={classes.root}>\n      <Paper>\n        <Grid container spacing={2} direction='column' alignItems='center'\n          className={classes.form} component='form' noValidate autoComplete='off'>\n          <Grid item>\n            <Typography variant='h5'>Carátulas UCSP</Typography>\n          </Grid>\n          <Grid item className={classes.itemContainer}> {/*----- Career -----*/}\n            <Autocomplete\n              options={data['career'].options}\n              value={data['career'].value}\n              onChange={(event, value) => handleDataChange('career', value)}\n              renderInput={(params) =>\n                <TextField {...params} label={data['career'].label} variant=\"outlined\" />\n              }\n            />\n          </Grid>\n          <Grid item className={classes.itemContainer}> {/*----- Course -----*/}\n            <TextFieldView name='course' value={data['course'].value} label={data['course'].label}\n                           onChange={(event) => handleDataChange('course', event.target.value)} />\n          </Grid>\n          <Grid item className={classes.itemContainer}> {/*----- Work -----*/}\n            <TextFieldView name='work' value={data['work'].value} label={data['work'].label}\n                           onChange={(event) => handleDataChange('work', event.target.value)} />\n          </Grid>\n          <Grid item className={classes.itemContainer}> {/*----- Semester and Year -----*/}\n            <Grid container spacing={1} direction='row'>\n              <Grid item className={classes.semesterInput}>\n                <Autocomplete\n                  options={data['semester'].options}\n                  value={data['semester'].value}\n                  onChange={(event, value) => handleDataChange('semester', value)}\n                  renderInput={(params) =>\n                    <TextField {...params} label={data['semester'].label} variant=\"outlined\" />\n                  }\n                />\n              </Grid>\n              <Grid item className={classes.yearInput}>\n                <TextFieldView key='year' name='year' value={data['year'].value} label={data['year'].label}\n                               onChange={(event) => handleDataChange('year', event.target.value)} />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item className={classes.itemContainer}> {/*----- Gender -----*/}\n            <RadiosView classes={classes} field='gender' label={data['gender'].label}\n                        data={data} handleRadioChange={(event) => handleDataChange('gender', event.target.value)} />\n          </Grid>\n\n          <Grid item className={classes.itemContainer}> {/*----- Names -----*/}\n            <FormLabel component='legend'>Integrantes</FormLabel>\n            <div style={{width: \"100%\", height: \"0.5em\"}} />\n            <Grid container spacing={1}>\n              {\n                data['names'].value.map((name, idx) =>\n                  <React.Fragment key={idx}>\n                    <Grid item sm={10} key={idx}>\n                      <TextFieldView name='names' value={name}\n                                     onChange={handleNamesInput(idx)} />\n                    </Grid>\n                    <Grid item sm={2} key={idx} style={{ textAlign: \"left\" }}>\n                      {\n                        (idx === data['names'].value.length - 1 ?\n                          <IconButton aria-label='add name' onClick={addName}>\n                            <AddIcon fontSize=\"small\" />\n                          </IconButton>\n                          :\n                          <IconButton aria-label='remove name' onClick={removeName(idx)}>\n                            <RemoveIcon fontSize=\"small\" />\n                          </IconButton>)\n                      }\n                    </Grid>\n                  </React.Fragment>\n                )\n              }\n            </Grid>\n          </Grid>\n          <Grid item> {/*----- Button -----*/}\n            <Button variant='contained' color='primary' onClick={() => generateCover()}>\n              Generar Caratula\n            </Button>\n          </Grid>\n          <Grid item> {/*----- Link -----*/}\n            <a href={url}>{url}</a>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst arcBlue = \"#1A5BA0\";\nconst arcOrange = \"#FFBA60\";\nconst background = \"#dfdbd9\";\n\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      blue: arcBlue,\n      orange: arcOrange\n    },\n    primary: {\n      main: arcBlue\n    },\n    secondary: {\n      main: arcOrange\n    },\n    background: {\n      default: background\n    }\n  },\n  typography: {\n    tab: {\n      fontFamily: \"Raleway\",\n      textTransform: \"none\",\n      fontWeight: '700',\n      fontSize: \"1rem\",\n    },\n    estimate: {\n      fontFamily: \"Pacifico\",\n      fontSize: \"1rem\",\n      textTransform: \"none\",\n      color: \"white\"\n    },\n    h2: {\n      fontFamily: 'Raleway',\n      fontWeight: 700,\n      fontSize: '2.5em',\n      color: `${arcBlue}`,\n      lineHeight: 1.5\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}