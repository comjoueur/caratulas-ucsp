{"version":3,"sources":["api.js","App.js","serviceWorker.js","theme.js","index.js"],"names":["url","process","includes","defaultData","career","value","label","options","course","work","semester","year","gender","radio","names","useStyles","makeStyles","theme","html","backgroundColor","palette","background","default","root","marginTop","spacing","form","paddingTop","paddingBottom","itemContainer","width","shortInput","display","nameInput","iconContainer","TextFieldView","otherprops","TextField","variant","fullWidth","RadiosView","data","field","handleRadioChange","FormControl","component","key","FormLabel","RadioGroup","row","aria-label","onChange","Object","keys","map","FormControlLabel","name","control","Radio","color","App","classes","useState","setUrl","setData","generateCover","console","log","method","body","JSON","stringify","headers","fetch","then","res","json","link","fetchGenerateCover","reduce","prev","convertToDataApi","pdfUrl","handleDataChange","addName","Container","maxWidth","className","Paper","Grid","container","direction","alignItems","noValidate","autoComplete","item","Typography","Autocomplete","onInputChange","event","renderInput","params","idx","Fragment","style","index","newValues","target","changeNameFromData","length","IconButton","onClick","fontSize","indexToRemove","filter","x","Button","href","Boolean","window","location","hostname","match","createMuiTheme","common","blue","orange","primary","main","secondary","typography","tab","fontFamily","textTransform","fontWeight","estimate","h2","lineHeight","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7204b718.chunk.js","sourcesContent":["const url = process.env.NODE_ENV.includes('development') ? 'http://localhost:4000/' : 'https://caratulas-ucsp-api.herokuapp.com/';\n\nexport const fetchGenerateCover = (data) => {\n  console.log(data);\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers:{\n      'Content-Type': 'application/json'\n    }\n  };\n\n  return fetch(url, options)\n    .then(res=> res.json())\n    .then(res => res.link)\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchGenerateCover } from \"./api\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nconst debug = false;\n\nconst defaultData = {\n  career: {\n    value: debug ? \"Ciencias de la Computación\" : \"\",\n    label: \"Carrera\",\n    options: [\n      \"Administración de Empresas\",\n      \"Arquitectura y Urbanismo\",\n      \"Ciencias de la Computación\",\n      \"Ingenieria Mecatronica\",\n      \"Ingenieria Civil\",\n      \"Contabilidad\",\n      \"Derecho\",\n      \"Educación inicial y primaria\",\n      \"Ingenieria Electronica y Telecomunicaciones\",\n      \"Ingenieria Industrial\",\n      \"Psicologia\",\n      \"\"\n    ]\n  },\n  course: {\n    value: debug ? \"Microprocessors\" : \"\",\n    label: \"Curso\"\n  },\n  work: {\n    value: debug ? \"Real final job\" : \"\",\n    label: \"Nombre del trabajo\"\n  },\n  semester: {\n    value: debug ? \"VIII Semester\" : \"\",\n    label: \"Semestre\"\n  },\n  year: {\n    value: debug ? \"2020-1\" : \"2020-1\",\n    label: \"Año\"\n  },\n  gender: {\n    value: debug ? \"M\" : \"M\",\n    radio: { \"M\": \"Masculino\", \"F\": \"Femenino\" },\n    label: \"Género\"\n  },\n  names: {\n    value: debug ? [\"Oscar Daniel Ramos Ramirez\"] : [\"\"],\n    label: \"Integrantes\"\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    html: {\n      backgroundColor: theme.palette.background.default\n    }\n  },\n  root: {\n    marginTop: theme.spacing(8)\n  },\n  form: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  },\n  itemContainer: {\n    width: \"80%\"\n  },\n  shortInput: {\n    width: \"50%\",\n    display: \"inline\"\n  },\n  nameInput: {\n    width: \"85%\",\n  },\n  iconContainer: {\n    paddingTop: \"0.65em\"\n  }\n}));\n\nconst TextFieldView = ({ ...otherprops }) =>\n  <TextField\n    variant='outlined'\n    fullWidth\n    {...otherprops}\n  />;\n\nconst RadiosView = ({ data, field, handleRadioChange }) => (\n  <FormControl component='fieldset' key={field}>\n    <FormLabel component='legend'>{data[field].label}</FormLabel>\n    <RadioGroup row aria-label={data[field].label} value={data[field].value} onChange={handleRadioChange}>\n      {\n        Object.keys(data[field].radio).map(key => (\n          <FormControlLabel\n            key={key}\n            name={field}\n            value={key}\n            control={<Radio color='primary' />}\n            label={data[field].radio[key]}\n          />\n        ))\n      }\n    </RadioGroup>\n  </FormControl>\n)\n\nfunction App() {\n  const classes = useStyles();\n  const [url, setUrl] = useState(\"Aquí aparecerá un link\");\n  const [data, setData] = useState(defaultData);\n\n  const generateCover = () => {\n    const convertToDataApi = data =>\n      Object.keys(data).reduce((prev, key) => {\n        prev[key] = data[key].value;\n        return prev;\n      }, {});\n\n    fetchGenerateCover(convertToDataApi(data)).then(pdfUrl => {\n      setUrl(pdfUrl);\n    });\n  };\n\n  const handleDataChange = (field, value) => {\n    setData({ ...data, [field]: { ...data[field], value } });\n  };\n\n  const handleNamesInput = index => event => {\n    const changeNameFromData = (value) => {\n      const newValues = [...value];\n      newValues[index] = event.target.value;\n      return newValues;\n    }\n\n    setData({ ...data, names: { ...data.names, value: changeNameFromData(data.names.value) } });\n  }\n\n  const addName = () => {\n    setData({...data, names: {...data.names, value: [...data.names.value, \"\"]}})\n  }\n\n  const removeName = indexToRemove => () => {\n    const removeNameFromData = value => value.filter((x, idx) => idx !== indexToRemove)\n\n    setData({...data, names: {...data.names, value: removeNameFromData(data.names.value) } })\n  }\n\n\n  return (\n    <Container maxWidth='xs' className={classes.root}>\n      <Paper>\n        <Grid container spacing={2} direction='column' alignItems='center'\n          className={classes.form} component='form' noValidate autoComplete='off'>\n          <Grid item>\n            <Typography variant='h5'>Carátulas UCSP</Typography>\n          </Grid>\n          {Object.keys(data).map((field) => {\n              if(field === 'career') {\n                return (\n                <Grid item key={field} className={classes.itemContainer}>\n                  <Autocomplete\n                    options={data['career'].options}\n                    value={data['career'].value}\n                    onInputChange={(event, value) => handleDataChange('career', value)}\n                    renderInput={(params) =>\n                      <TextField {...params} label={data['career'].label} variant=\"outlined\" />\n                    }\n                  />\n                </Grid>\n                )\n              }\n              else if (field === 'names') {\n                return (\n                  <Grid item key={field} className={classes.itemContainer}>\n                    <FormLabel component='legend'>Integrantes</FormLabel>\n                    {\n                      data[field].value.map((name, idx) =>\n                      <React.Fragment key={idx}>\n                        <div style={{marginTop: \"0.5em\"}}/>\n                        <TextFieldView className={classes.nameInput} key={field} name={field} value={name}\n                                       onChange={handleNamesInput(idx)} />\n                        {\n                          (idx === data[field].value.length - 1 ?\n                          <IconButton aria-label='add name' className={classes.iconContainer} onClick={addName}>\n                            <AddIcon fontSize=\"small\" />\n                          </IconButton>\n                          :\n                          <IconButton aria-label='remove name' className={classes.iconContainer} onClick={removeName(idx)}>\n                            <RemoveIcon fontSize=\"small\" />\n                          </IconButton>)\n                        }\n                      </React.Fragment>\n                      )\n                    }\n                  </Grid>\n                )\n              } else if (field === 'semester') {\n                return (\n                  <Grid item key={field} className={classes.itemContainer}>\n                    <Grid container spacing={1} direction='row'>\n                      <Grid item className={classes.shortInput}>\n                        <TextFieldView key='semester' name='semester' value={data[field].value} label={data[field].label}\n                                       onChange={(event) => handleDataChange('semester', event.target.value)} />\n                      </Grid>\n                      <Grid item className={classes.shortInput}>\n                        <TextFieldView key='year' name='year' value={data['year'].value} label={data['year'].label}\n                                       onChange={(event) => handleDataChange('year', event.target.value)} />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                )\n              } else if (field === 'year') {\n                return <React.Fragment key={field}/>\n              } else if (data[field].radio) {\n                return (\n                  <Grid item key={field} className={classes.itemContainer}>\n                    <RadiosView classes={classes} key={field} field={field} label={data[field].label}\n                                data={data} handleRadioChange={(event) => handleDataChange(field, event.target.value)} />\n                  </Grid>\n                )\n              } else {\n                return (\n                  <Grid item key={field} className={classes.itemContainer}>\n                    <TextFieldView key={field} name={field} value={data[field].value} label={data[field].label}\n                                   onChange={(event) => handleDataChange(field, event.target.value)} />\n                  </Grid>\n                )\n              }\n            }\n          )}\n          <Grid item>\n            <Button variant='contained' color='primary' onClick={() => generateCover()}>\n              Generar Caratula\n            </Button>\n          </Grid>\n          <Grid item>\n            <a href={url}>{url}</a>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst arcBlue = \"#1A5BA0\";\nconst arcOrange = \"#FFBA60\";\nconst background = \"#dfdbd9\";\n\nconst theme = createMuiTheme({\n  palette: {\n    common: {\n      blue: arcBlue,\n      orange: arcOrange\n    },\n    primary: {\n      main: arcBlue\n    },\n    secondary: {\n      main: arcOrange\n    },\n    background: {\n      default: background\n    }\n  },\n  typography: {\n    tab: {\n      fontFamily: \"Raleway\",\n      textTransform: \"none\",\n      fontWeight: '700',\n      fontSize: \"1rem\",\n    },\n    estimate: {\n      fontFamily: \"Pacifico\",\n      fontSize: \"1rem\",\n      textTransform: \"none\",\n      color: \"white\"\n    },\n    h2: {\n      fontFamily: 'Raleway',\n      fontWeight: 700,\n      fontSize: '2.5em',\n      color: `${arcBlue}`,\n      lineHeight: 1.5\n    }\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}